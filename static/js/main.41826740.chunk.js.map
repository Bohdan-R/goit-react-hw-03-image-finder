{"version":3,"sources":["services/images-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/Spinner/Spinner.js","App.js","index.js"],"names":["searhQuery","currentPage","fetch","then","response","json","hits","Searchbar","state","query","handleChange","e","setState","currentTarget","value","hendleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","smallImageUrl","largeImageURL","toggleModal","onClick","src","alt","defaultProps","ImageGallery","imagesList","map","id","webformatURL","modalRoot","document","querySelector","Modal","hendleKeyDown","code","onClose","hendleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","url","Button","loadMore","Spinner","color","height","width","axios","defaults","headers","common","App","images","isLoading","showModal","onChangeQuery","fetchImages","options","imagesApi","prevState","scrollTo","top","documentElement","scrollHeight","behavior","finally","largeImgUrl","prevProps","shouldRenderLoadMoreButton","length","shouldRenderModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.41826740.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = '20186035-b457393de22e7a705b5d0535b';\r\n\r\nconst fetchImages = ({searhQuery = '', currentPage = 1 }) => {\r\n    return fetch(`https://pixabay.com/api/?key=${apiKey}&q=${searhQuery}&page=${currentPage}&per_page=12`)\r\n        .then(response => response.json())\r\n        .then(({hits}) => hits)\r\n}\r\n\r\nexport default { fetchImages };","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../styles.css';\r\n\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        query: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ query: e.currentTarget.value })\r\n    }\r\n\r\n    hendleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.onSubmit(this.state.query)\r\n\r\n        this.setState({query: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n             <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.hendleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={this.state.query}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ smallImageUrl, largeImageURL, toggleModal}) => {\r\n    return (\r\n        <li className=\"ImageGalleryItem\" onClick={() => toggleModal(largeImageURL)}>\r\n            <img src={smallImageUrl} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n    toggleModal: () => null,\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    smallImageUrl: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    toggleModal: PropTypes.func,\r\n}\r\n\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({imagesList, onClick}) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {imagesList.map(({ id, webformatURL, largeImageURL }) => (\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    smallImageUrl={webformatURL}\r\n                    largeImageURL={largeImageURL}\r\n                    toggleModal={onClick}\r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    imagesList: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n    })).isRequired,\r\n}\r\n\r\nexport default ImageGallery;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport '../../styles.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.hendleKeyDown)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.hendleKeyDown)\r\n    }\r\n\r\n    hendleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    hendleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.hendleBackdropClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={this.props.url} alt=\"\" />\r\n                </div>\r\n            </div>,\r\n            modalRoot\r\n        )\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../styles.css';\r\n\r\nconst Button = ({loadMore}) => (\r\n    \r\n    <button className=\"Button\" onClick={loadMore}>Load more</button>\r\n    \r\n)\r\n\r\nButton.propTypes = {\r\n    loadMore: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport '../../styles.css';\r\n\r\nconst Spinner = () => (\r\n    <Loader\r\n        className=\"Spiner\"\r\n        type=\"TailSpin\"\r\n        color=\"#3f51b5\"\r\n        height={40}\r\n        width={40}\r\n    />\r\n);\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './styles.css'\nimport imagesApi from './services/images-api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport Spinner from './components/Spinner';\n\naxios.defaults.headers.common['Authorization'] = 'Bearer 20186035-b457393de22e7a705b5d0535b';\n\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searhQuery: '',\n    isLoading: false,\n    showModal: false,\n    largeImageURL: '',\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searhQuery !== this.state.searhQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = (query) => {\n    this.setState({ searhQuery: query, currentPage: 1, images: [] })\n  }\n\n  fetchImages = () => {\n    const { currentPage, searhQuery } = this.state;\n    const options = { currentPage, searhQuery };\n\n    this.setState({isLoading: true})\n\n    imagesApi.fetchImages(options).then(images => {\n      this.setState(prevState => ({\n        images: [...prevState.images, ...images],\n        currentPage: prevState.currentPage + 1,\n      }))\n\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    })\n      .finally(() => this.setState({ isLoading: false }))\n  }\n\n  toggleModal = (largeImgUrl) => {\n\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      largeImageURL: largeImgUrl,\n    }))\n  }\n\n  render() {\n    const { images, isLoading, showModal, largeImageURL } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n    const shouldRenderModal = largeImageURL !== '' && showModal\n    \n    return (\n\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery imagesList={images} onClick={this.toggleModal} />\n        \n        {shouldRenderModal && <Modal onClose={this.toggleModal} url={largeImageURL}/>}\n\n        {isLoading && <Spinner/>}\n\n        {shouldRenderLoadMoreButton && <Button loadMore={this.fetchImages} />}\n        \n      </div>\n      \n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}